// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _archive.Models;

#nullable disable

namespace _archive.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220906073636_initializeTestDB")]
    partial class initializeTestDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.8");

            modelBuilder.Entity("_archive.Models.RecordsModel", b =>
                {
                    b.Property<int>("ArchiveID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Analysis")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("BPMNo")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ChangesetID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("RecordsCategory")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ReleaseTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TestResults")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdateDetails")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UserID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ArchiveID");

                    b.HasIndex("UserID");

                    b.ToTable("RecordsModel");
                });

            modelBuilder.Entity("_archive.Models.UsersModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastLogin")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("RegisteredAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("Role")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("UsersModel");
                });

            modelBuilder.Entity("_archive.Models.RecordsModel", b =>
                {
                    b.HasOne("_archive.Models.UsersModel", "User")
                        .WithMany("RecordsModel")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("_archive.Models.UsersModel", b =>
                {
                    b.Navigation("RecordsModel");
                });
#pragma warning restore 612, 618
        }
    }
}
