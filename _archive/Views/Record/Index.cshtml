@model IEnumerable<RecordsModel>

@{
    ViewData["Title"] = "Records";

    Pagination pagination = new Pagination();

    int pageNo = 0;

    if (ViewBag.Pagination != null)
    {
        pagination = ViewBag.Pagination;
        pageNo = pagination.CurrentPage;
    }
}
<div class="container">
    <div class="d-flex my-4 justify-content-between">
        <h3 class=" small text-muted">Welcome back,@ViewBag.currentUser.UserName !</h3>
        <h3 class="small text-muted">
            Current Role:
            @if (ViewBag.IsCurrentUserAdmin)
            {
                <span class="fw-bold">ADMIN</span>
            }
            else
            {
                <span class="fw-bold">DEVELOPER</span>
            }
        </h3>
    </div>

    <h3>Archive Records</h3>
    <hr class="my-3" />

    <div class="d-flex justify-content-between my-2">
        <div>
            <a class="nav-link ml-0 px-0" asp-controller="Record" asp-action="Create">Create New Record</a>
        </div>
        <div>
            @using (Html.BeginForm())
            {
                <div class="d-flex align-items-center">
                    @Html.TextBox("key_search",ViewBag.FilterValue as string,new {@class="form-control",@placeholder="Search by.."})
                    <button class="btn search-btn" type="submit"><i class="fa fa-search" aria-hidden="true"></i></button>
                </div>
            }

        </div>
    </div>


    <table class="table">
        <thead class="thead-turkcell">
            <tr>
                <th>@Html.ActionLink("Archive ID","Index","Record",new {sort_Order = "AchiveID"},null)</th>
                <th>@Html.ActionLink("Changeset ID","Index","Record",new {sort_Order = "ChangesetID"},null)</th>
                <th>@Html.ActionLink("BPM NO","Index","Record",new {sort_Order = "BPMNo"},null)</th>
                <th>@Html.ActionLink("User","Index","Record",new {sort_Order = "UserID"},null)</th>
                <th>@Html.ActionLink("Title","Index","Record",new {sort_Order = "Title"},null)</th>
                <th>Release Date</th>
                <th>Status</th>
                <th>Action(s)</th>

            </tr>
        </thead>
        <tbody>
            @foreach (var record in Model)
            {

                <tr style="@(ViewBag.CurrentUser.Id == record.UserID  ? "background-color:rgba(292,201,16,.1);" : "")">


                    <td><a class="nav-link" asp-route-id="@record.ArchiveID" asp-action="Details" asp-controller="Record">@record.ArchiveID</a></td>
                    <td>@record.ChangesetID</td>
                    <td>@record.BPMNo</td>
                    <td>@(record.User.UserName == ViewBag.CurrentUser.UserName ? "You" : record.User.UserName)</td>
                    <td>@(record.Title.Length > 10  ? record.Title.Substring(0,10) + "..." : record.Title)</td>
                    <td>@record.ReleaseTime.ToString("MM/dd/yyyy")</td>
                    <td>@(record.Status.Length > 10  ? record.Status.Substring(0,10) + "..." : record.Status)</td>
                    <td>
                        @if (ViewBag.CurrentUser.Id == record.UserID || ViewBag.IsCurrentUserAdmin)
                        {
                            <a class="text-primary" asp-route-id="@record.ArchiveID" asp-action="Edit" asp-controller="Record">
                                <i class="fa fa-cog" aria-hidden="true"></i>
                            </a>
                        }
                        @if (ViewBag.IsCurrentUserAdmin)
                        {
                            <form class="d-inline" asp-action="Delete" method="POST" asp-controller="Record" asp-route-id="@record.ArchiveID">
                                <button type="button" class="text-danger remove-btn" onclick="return removeModal(this)">
                                    <i class="fa fa-times" aria-hidden="true"></i>
                                </button>
                            </form>

                        }

                    </td>

                </tr>

            }
        </tbody>
    </table>
</div>
</div>



<div class="container">
    @if (pagination.TotalPages > 1)
    {
        <ul class="pagination justify-content-end">
            @for (var pge = pagination.StartPage; pge <= pagination.EndPage; pge++)
            {
                <li class="page-item @(pge == pagination.CurrentPage?"active" :"")">
                    <a class="page-link" asp-controller="Record" asp-action="Index" asp-route-pg="@pge">
                        @pge
                    </a>
                </li>

            }
        </ul>
    }
</div>



